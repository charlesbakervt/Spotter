function SpotterUI()    
scr=get(0, 'ScreenSize');
pos=[scr(1:2)+scr(3:4).*0.01,scr(3:4).*0.95];
fig = figure( ...
        'Units', 'pixel', ...
        'Position', pos, ...
        'Name', 'Nucleus Spot Counter', ...
        'MenuBar', 'none', ...
        'Toolbar', 'none', ...
        'Color', get(0, 'defaultuicontrolbackgroundcolor'), ...
        'NumberTitle', 'off', ...
        'Resize', 'on', ...
        'Visible', 'off');
    
% save all gui object handles as guidata so they can be accessed later
handles = guidata(fig);
handles.f=fig;
% slice the display up into separate panels to organize the controls
height=0.6;
width=0.6;
    panelImageStack = uipanel( ...
        'Parent', fig, ...
        'Units', 'normalized', ...
        'Position', [.01, 0.1, 0.55, 0.9], ...
        'Title', 'Image Stack z-Projection');
    
    panelMenu = uipanel( ...
        'Parent', fig, ...
        'Units', 'normalized', ...
        'Position', [.81, .49, .18, .50], ...
        'Title', 'Menu');
    
    panelNucleiList = uipanel( ...
        'Parent', fig, ...
        'Units', 'normalized', ...
        'Position', [.62, .01, .18, .47], ...
        'Title', 'Nuclei Selection');

    panelSettings = uipanel( ...
        'Parent', fig, ...
        'Units', 'normalized', ...
        'Position', [.81, .01, .18, .47], ...
        'Title', 'Calibration and Settings');
    
    % panelImageStack: axes for Image Stack
    handles.imStack = axes( ...
        'Parent', panelImageStack, ...
        'Units', 'normalized', ...
        'OuterPosition', [.0, .0, 1.0, 1.0], ...
        'Position', [.01, .01, .99, .98], ...
        'HandleVisibility', 'callback', ...
        'NextPlot', 'replacechildren');
    axis(handles.imStack,'off');
    
    % panelMenu: buttons for all accessible actions
    uicontrol( ...
        'Parent', panelMenu, ...
        'Style', 'pushbutton', ...
        'Units', 'normalized', ...
        'Position', [.05, .85, .9, .1], ...
        'String', 'New Channel Calibration', ...
        'Callback', '', ...
        'BusyAction', 'cancel');
    
    handles.openChannel = uicontrol( ...
        'Parent', panelMenu, ...
        'Style', 'pushbutton', ...
        'Units', 'normalized', ...
        'Position', [.05, .75, .9, .1], ...
        'String', 'Load Channel Calibration', ...
        'Callback', '', ...
        'BusyAction', 'cancel');
    
    uicontrol( ...
        'Parent', panelMenu, ...
        'Style', 'pushbutton', ...
        'Units', 'normalized', ...
        'Position', [.05, .65, .9, .1], ...
        'String', 'Open Image Stack', ...
        'Callback', @open_imStack_Callback, ...
        'BusyAction', 'cancel');
    
    handles.zProject = uicontrol( ...
        'Parent', panelMenu, ...
        'Style', 'pushbutton', ...
        'Units', 'normalized', ...
        'Position', [.05, .55, .9, .1], ...
        'String', 'Z-projection (max)', ...
        'Callback', @project_imStack_Callback, ...
        'BusyAction', 'cancel');
    
    handles.autoSegment = uicontrol( ...
        'Parent', panelMenu, ...
        'Style', 'pushbutton', ...
        'Units', 'normalized', ...
        'Position', [.05, .45, .9, .1], ...
        'String', 'Auto Segment', ...
        'Callback', @autoSegment_Callback, ...
        'BusyAction', 'cancel');
    
    % panelChannels: listbox showing the available channels
    handles.NucleiList = uicontrol( ...
        'Parent', panelNucleiList, ...
        'Style', 'listbox', ...
        'String', '', ...
        'Units','normalized',...
        'Position', [.05, .15, .9, .8], ...
        'Callback', @rmNucleiList_Callback, ...
        'BusyAction', 'cancel', ...
        'Max', 2, 'Min', 0); % this allows multiple selections
    handles.rmNuclei = uicontrol( ...
        'Parent', panelNucleiList, ...
        'Style', 'pushbutton', ...
        'String', 'Remove Nuclei', ...
        'Units','normalized',...
        'Position', [.05, .01, .9 .1], ...
        'Callback', @rmNuclei_Callback, ...
        'BusyAction', 'cancel'); % this allows multiple selections
   
    
    % setting visibility to "on" only now speeds up the window creation
    set(fig, 'Visible', 'on');
    %store the hanldes in guidata
    guidata(fig, handles);
    % use guidata only for handles related to the actual user interface
    % use appdata to store the actual data
    UserData=get(fig,'UserData');
    %TODO initialize values
end
% --- Executes just before imagem is made visible------------------


%---------GUI callback functions-----------------------------------'
%open image stack
function open_imStack_Callback(hObject,eventdata)
     h=guidata(hObject);
     [imname, impath, imfilter_index] = uigetfile('*.tif','Open an image file (.tif)');
     UserData=get(h.f,'UserData');
     if imfilter_index
         
         ims=parse_stack([impath imname],1,40);
         front=ims(:,:,1);
         imagesc(front,'Parent',h.imStack);colormap gray;axis square;axis off;axis image;
     end
     UserData.I=ims;
     set(h.f,'UserData',UserData);
end
%project image stack
function project_imStack_Callback(hObject,eventdata)
    h=guidata(hObject);
    UserData=get(h.f,'UserData');
        zim=zproject(UserData.I);
        imagesc(zim,'Parent',h.imStack);colormap gray;axis square;axis off;axis image;
        UserData.I2=zim;
    set(h.f,'Userdata',UserData);
end
%segment nuclei
function autoSegment_Callback(hObject,eventdata)
    h=guidata(hObject);
    UserData=get(h.f,'UserData');
    DL=segmentNuclei(UserData.I2);
    %filtler for area and background
    [nuclei BW]=filterSegmentation(DL,UserData.I2,h.imStack);
    UserData.nuclei=nuclei;
    UserData.BW=BW;
    set(h.f,'Userdata',UserData);
    nuclei_Labels={nuclei.Label};
    set(h.NucleiList,'String',nuclei_Labels,'Value',[1]);
end
%remove segmented nuclei
function rmNuclei_Callback(hObject,eventdata)
    h=guidata(hObject);
    UserData=get(h.f,'UserData');
    selection=get(h.NucleiList,'Value');
    [nuclei BW]=filterSegmentation(UserData.BW,UserData.I2,h.imStack,selection);
    UserData.nuclei=nuclei;
    UserData.BW=BW;
    set(h.f,'Userdata',UserData);
    nuclei_Labels={nuclei.Label};
    set(h.NucleiList,'String',nuclei_Labels,'Value',[1]);
end
%select segmented nuclei to remove
function rmNucleiList_Callback(hObject,eventdata)
selection=get(gcbo,'Value')    
end






